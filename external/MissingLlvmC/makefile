
# makefile for building missingLlvmC
	
#BB - generate two sets of object files? ala vc?
BUILD_DIR= ./build
#BUILD_DIR= .


LLVM_BIN_PATH = ../../../llvm50/cmade64/bin
LLVM_MODULES = analysis asmparser asmprinter binaryformat codegen debuginfodwarf globalisel instrumentation native target x86 core support
LLVM_CFLAGS = `$(LLVM_BIN_PATH)/llvm-config --cppflags`
LLVM_LIBS = `$(LLVM_BIN_PATH)/llvm-config --libs $(LLVM_MODULES)`

CC=gcc
AR=ar
CFLAGS= -MMD -Wall -Werror -std=c++11 -I ../external  -I /usr/include/llvm-c-7 -I /usr/include/llvm-7
SOURCES=LlvmcDiBuilder.cpp
OBJECTS=$(SOURCES:%.cpp=$(BUILD_DIR)/%.o)

# *.d files generated by clang (from option -MMD) so that header file edits rebuild properly
DEPENDS=$(SOURCES:%.cpp=$(BUILD_DIR)/%.d)

LIBRARY=$(BUILD_DIR)/libMissingLlvmC.a

#targets 

release: CFLAGS += -O2
release: $(SOURCES) $(LIBRARY)

debug: CFLAGS += -DDEBUG -g
debug: $(SOURCES) $(LIBRARY)

#debug print target, usage example: 'make print-LLVM_CFLAGS'
print-%  : ; @echo $* = $($*)

$(LIBRARY): $(OBJECTS)
	$(AR) -q $(LIBRARY) $(OBJECTS)

$(BUILD_DIR)/%.o: %.cpp
	mkdir -p $(BUILD_DIR)
	$(CC) $(CFLAGS) -c $< -o $@	

clean:
	rm -f $(LIBRARY) $(OBJECTS) $(DEPENDS)

-include $(DEPENDS)
